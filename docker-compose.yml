#version: '3.9'

services:
  # ===============================
  # 1) Ecommerce Store Services
  # ===============================
  ecommerce_postgres:
    image: postgres:15.0
    container_name: ecommerce_postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce_db
    ports:
      - "5432:5432"
    volumes:
      - ecommerce_postgres_data:/var/lib/postgresql/data
      - ./ecommerce-store/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  ecommerce_nextjs:
    build:
      context: ./ecommerce-store
    container_name: ecommerce_nextjs_app
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - ecommerce_postgres
    environment:
      # Database connection
      DB_HOST: "ecommerce_postgres"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      DB_NAME: "ecommerce_db"
      DB_PORT: "5432"
      # Next.js configuration
      NEXTAUTH_URL: "http://localhost:3000"
      NEXT_PUBLIC_APP_URL: "http://localhost:3000"
      API_URL: "http://localhost:3000"

  # ===============================
  # 2) Chatbot Platform Services
  # ===============================
  chatbot_platform_postgres:
    image: postgres:latest
    container_name: chatbot_platform_postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce_db1
    ports:
      - "5433:5432"  # changed host port to avoid conflict
    volumes:
      - chatbot_platform_postgres_data:/var/lib/postgresql/data
      - ./chatbot-platform/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  chatbot_platform_nextjs:
    build:
      context: ./chatbot-platform
    container_name: chatbot_platform_nextjs_app
    restart: always
    ports:
      - "3001:3000"  # changed host port to avoid conflict with ecommerce
    depends_on:
      - chatbot_platform_postgres
    environment:
      # Database connection
      DB_HOST: "chatbot_platform_postgres"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      DB_NAME: "ecommerce_db1"
      DB_PORT: "5432"
      # Next.js configuration
      NEXTAUTH_URL: "http://localhost:3001"
      NEXT_PUBLIC_APP_URL: "http://localhost:3001"
      API_URL: "http://localhost:3001"

  # ===============================
  # 3) Lulai Chatbot Services
  # ===============================
  lulai_db:
    image: pgvector/pgvector:pg14
    container_name: lulai-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-lulai}
    volumes:
      - lulai_postgres_data:/var/lib/postgresql/data
      - ./chatbot/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5434:5432"  # changed host port to avoid conflict
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - lulai-network

  lulai_web:
    build:
      context: ./chatbot/lulai-website
      dockerfile: Dockerfile
    container_name: lulai-web
    restart: always
    depends_on:
      - lulai_db
      - lulai_python_api
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@lulai_db:5432/${POSTGRES_DB:-lulai}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:3002
      - PYTHON_API_URL=http://lulai_python_api:8000
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
    ports:
      - "3002:3000"  # changed host port to avoid conflict
    volumes:
      - ./chatbot/uploads:/app/uploads
    networks:
      - lulai-network

  lulai_python_api:
    build:
      context: ./chatbot/python-server
      dockerfile: Dockerfile
    container_name: lulai-python-api
    restart: always
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    networks:
      - lulai-network

  # ===============================
  # 4) Lulai-Chatbot (Newly Added)
  # ===============================
  lulai_chatbot_nextjs:
    build:
      context: ./lulai-chatbot/nextjs-chatbot
    container_name: lulai_chatbot
    restart: always
    # Mapping 3005 on the host to 3001 inside container (instead of 3001:3001 to avoid conflict)
    ports:
      - "3005:3001"
    env_file:
      - ./lulai-chatbot/nextjs-chatbot/.env.local
    volumes:
      - ./lulai-chatbot/nextjs-chatbot:/app
      - /app/node_modules
      - ./lulai-chatbot/nextjs-chatbot/scripts:/scripts
    command: ["npm", "run", "dev"]
    depends_on:
      - lulai_chatbot_python_server
    networks:
      - lulai-network

  lulai_chatbot_python_server:
    build:
      context: ./lulai-chatbot/nextjs-chatbot/python-server
      dockerfile: Dockerfile
    container_name: lulai_chatbot_python_server
    restart: always
    # Mapping 8001 on the host to 8000 inside container to avoid conflict with lulai_python_api
    ports:
      - "8001:8000"
    env_file:
      - ./lulai-chatbot/nextjs-chatbot/.env.local
    networks:
      - lulai-network
    expose:
      - "8000"

# ===========================================================
# Networks
# ===========================================================
networks:
  lulai-network:
    driver: bridge

# ===========================================================
# Volumes
# ===========================================================
volumes:
  ecommerce_postgres_data:
  chatbot_platform_postgres_data:
  lulai_postgres_data:
